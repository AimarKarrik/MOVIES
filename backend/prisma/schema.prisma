// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Screenplays {
  id               Int                @id @default(autoincrement())
  title            String
  description      String             @db.Text
  director         String
  releaseDate      DateTime
  genres           String             @default("") // csv of genre names
  ageRating        String
  image            String?            @db.LongText
  rating           Float
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  Episodes         Episodes[]
  Reviews          Reviews[]
  LikedScreenplays LikedScreenplays[]

  @@fulltext([title])
}

model Episodes {
  id           Int         @id @default(autoincrement())
  title        String
  description  String      @db.Text
  season       Int
  number       Int
  releaseDate  DateTime
  image        String?    @db.LongText
  rating       Float
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  screenplay   Screenplays @relation(fields: [screenplayId], references: [id])
  screenplayId Int
}

model Genres {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Reviews {
  id           Int         @id @default(autoincrement())
  title        String
  content      String
  rating       Int
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  screenplay   Screenplays @relation(fields: [screenplayId], references: [id])
  screenplayId Int
  user         Users       @relation(fields: [userId], references: [id])
  userId       Int
}

model Users {
  id               Int                @id @default(autoincrement())
  name             String
  email            String             @unique
  password         String
  bio              String?
  isAdmin          Boolean            @default(false)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  Reviews          Reviews[]
  userFriends      Friends[]          @relation("user")
  Friends          Friends[]          @relation("friend")
  LikedScreenplays LikedScreenplays[]
}

model Friends {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      Users    @relation(fields: [userId], references: [id], name: "user")
  userId    Int
  friend    Users    @relation(fields: [friendId], references: [id], name: "friend")
  friendId  Int
}

model LikedScreenplays {
  id           Int         @id @default(autoincrement())
  screenplay   Screenplays @relation(fields: [screenplayId], references: [id])
  screenplayId Int
  user         Users       @relation(fields: [userId], references: [id])
  userId       Int
}
